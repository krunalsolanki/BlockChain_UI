using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

using System.Numerics;
using System.Threading.Tasks;
using Nethereum.Contracts;
using Nethereum.Hex.HexTypes;
using Nethereum.Web3;

using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Contracts.CQS;
using Nethereum.Util;
using Nethereum.Web3.Accounts;
using Nethereum.Hex.HexConvertors.Extensions;
using Nethereum.Contracts.Extensions;
using Nethereum.Web3.Accounts.Managed;
using System.Web.UI.DataVisualization.Charting;
using System.Drawing;

namespace WebApplication1
{

    public class StandardTokenDeployment : ContractDeploymentMessage
    {

        public static string bytecode1 = "";

        public StandardTokenDeployment() : base(bytecode1) { }

        [Parameter("uint256", "totalSupply")]
        public BigInteger TotalSupply { get; set; }

    }
    public partial class _Default : Page
    {
        const string strURL = "http://104.211.206.173:7545/";//"http://104.211.209.124:7545/"; //The URL endpoint for the blockchain network.

        #region static values
        //The contract address.
        const string address = "0x71d54D727F333e73Dc15F0abaF4C738C7f2b7C89";// "0x34E7Cff39Edd8Fd069ee65b8470719BE1Dd799B9";

        //The ABI for the contract.
        //  string ABI = @"[{'constant':true,'inputs':[],'name':'candidate1','outputs':[{'name':'','type':'uint256'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':false,'inputs':[{'name':'candidate','type':'uint256'}],'name':'castVote','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':true,'inputs':[],'name':'candidate2','outputs':[{'name':'','type':'uint256'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':true,'inputs':[{'name':'','type':'address'}],'name':'voted','outputs':[{'name':'','type':'bool'}],'payable':false,'stateMutability':'view','type':'function'}]";
        string ABI = @"
[
    {
      'constant': true,
      'inputs': [
        {
          'name': '',
          'type': 'uint256'
        }
      ],
      'name': 'options',
      'outputs': [
        {
          'name': '',
          'type': 'string'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function'
    },
    {
      'constant': true,
      'inputs': [
        {
          'name': '',
          'type': 'uint256'
        }
      ],
      'name': 'votes',
      'outputs': [
        {
          'name': '',
          'type': 'uint256'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function'
    },
    {
      'inputs': [
        {
          'name': '_options',
          'type': 'string[]'
        }
      ],
      'payable': false,
      'stateMutability': 'nonpayable',
      'type': 'constructor'
    },
    {
      'constant': false,
      'inputs': [
        {
          'name': 'option',
          'type': 'uint256'
        }
      ],
      'name': 'vote',
      'outputs': [],
      'payable': false,
      'stateMutability': 'nonpayable',
      'type': 'function'
    },
    {
      'constant': false,
      'inputs': [
        {
          'name': 'optionName',
          'type': 'string'
        }
      ],
      'name': 'vote',
      'outputs': [],
      'payable': false,
      'stateMutability': 'nonpayable',
      'type': 'function'
    },
    {
      'constant': true,
      'inputs': [],
      'name': 'getOptions',
      'outputs': [
        {
          'name': 'strOptions',
          'type': 'string[]'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function'
    },
    {
      'constant': true,
      'inputs': [],
      'name': 'getVotes',
      'outputs': [
        {
          'name': 'intVal',
          'type': 'uint256[]'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function'
    }
  ]
";

        string ABI_newSyst  = @"[
    {
      'constant': true,
      'inputs': [
        {
          'name': '',
          'type': 'uint256'
        }
      ],
      'name': 'options',
      'outputs': [
        {
          'name': '',
          'type': 'string'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function',
      'signature': '0x409e2205'
    },
    {
      'constant': true,
      'inputs': [
        {
          'name': '',
          'type': 'uint256'
        }
      ],
      'name': 'votes',
      'outputs': [
        {
          'name': '',
          'type': 'uint256'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function',
      'signature': '0x5df81330'
    },
    {
      'inputs': [
        {
          'name': '_options',
          'type': 'string[]'
        }
      ],
      'payable': false,
      'stateMutability': 'nonpayable',
      'type': 'constructor',
      'signature': 'constructor'
    },
    {
      'constant': false,
      'inputs': [
        {
          'name': 'option',
          'type': 'uint256'
        }
      ],
      'name': 'vote',
      'outputs': [],
      'payable': false,
      'stateMutability': 'nonpayable',
      'type': 'function',
      'signature': '0x0121b93f'
    },
    {
      'constant': false,
      'inputs': [
        {
          'name': 'optionName',
          'type': 'string'
        }
      ],
      'name': 'vote',
      'outputs': [],
      'payable': false,
      'stateMutability': 'nonpayable',
      'type': 'function',
      'signature': '0xfc36e15b'
    },
    {
      'constant': true,
      'inputs': [],
      'name': 'getOptions',
      'outputs': [
        {
          'name': '',
          'type': 'string[]'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function',
      'signature': '0xcc2ee196'
    },
    {
      'constant': true,
      'inputs': [],
      'name': 'getVotes',
      'outputs': [
        {
          'name': '',
          'type': 'uint256[]'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function',
      'signature': '0x0dc96015'
    }
  ]";

        string ABI_old = @"

[
    {
      'constant': true,
      'inputs': [
        {
          'name': '',
          'type': 'uint256'
        }
      ],
      'name': 'options',
      'outputs': [
        {
          'name': '',
          'type': 'string'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function'
    },
    {
      'constant': true,
      'inputs': [
        {
          'name': '',
          'type': 'uint256'
        }
      ],
      'name': 'votes',
      'outputs': [
        {
          'name': '',
          'type': 'uint256'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function'
    },
    {
      'inputs': [
        {
          'name': '_options',
          'type': 'string[]'
        }
      ],
      'payable': false,
      'stateMutability': 'nonpayable',
      'type': 'constructor'
    },
    {
      'constant': false,
      'inputs': [
        {
          'name': 'option',
          'type': 'uint256'
        }
      ],
      'name': 'vote',
      'outputs': [],
      'payable': false,
      'stateMutability': 'nonpayable',
      'type': 'function'
    },
    {
      'constant': false,
      'inputs': [
        {
          'name': 'optionName',
          'type': 'string'
        }
      ],
      'name': 'vote',
      'outputs': [],
      'payable': false,
      'stateMutability': 'nonpayable',
      'type': 'function'
    },
    {
      'constant': true,
      'inputs': [],
      'name': 'getOptions',
      'outputs': [
        {
          'name': '',
          'type': 'string[]'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function'
    },
    {
      'constant': true,
      'inputs': [],
      'name': 'getVotes',
      'outputs': [
        {
          'name': '',
          'type': 'uint256[]'
        }
      ],
      'payable': false,
      'stateMutability': 'view',
      'type': 'function'
    }
  ]
";

        String bytecode =   "";
        //String  bytecode= "";
        #endregion
        protected async void Page_Load(object sender, EventArgs e)
        {
            if (!Page.IsPostBack)
            {


            //    var VoteDeploymentBase1 = new VoteDeployment()
            //    {
            //         Options= new List<string>() { "ad"},
            //    };

            //    var web3 = new Nethereum.Web3.Web3(new Account("0xc9f253cd0c04db9ed50ff10aa7f44c03f4b5cf4ef1797a09ec152870245c8454"), strURL);
            //    var unlockAccountResult = await web3.Personal.UnlockAccount.SendRequestAsync(address, "prize afraid blossom fossil river cereal oak voyage argue victory connect arrive", 1200).ConfigureAwait(false);

            //    var a = await VoteService.DeployContractAndWaitForReceiptAsync(web3, VoteDeploymentBase1, null); 

            //    //var a = await VoteService.DeployContractAndWaitForReceiptAsync(web3, VoteDeploymentBase1);
            //    var deploymentHandler = web3.Eth.GetContractDeploymentHandler<VoteDeployment>();
            //    var deploymentReceipt = await deploymentHandler.SendRequestAndWaitForReceiptAsync(VoteDeploymentBase1);

            //    // var web3 = new Nethereum.Web3.Web3(new Account("0xc9f253cd0c04db9ed50ff10aa7f44c03f4b5cf4ef1797a09ec152870245c8454"), strURL);
            //   // var unlockAccountResult = await web3.Personal.UnlockAccount.SendRequestAsync(address, "prize afraid blossom fossil river cereal oak voyage argue victory connect arrive", 1200).ConfigureAwait(false);
            //    var funds = await web3.Eth.GetBalance.SendRequestAsync(address).ConfigureAwait(false);
            //    // Log($"Account {senderAddress} has {UnitConversion.Convert.FromWei(funds.Value)} eth");

            //    var gasPrice = await web3.Eth.GasPrice.SendRequestAsync().ConfigureAwait(false);
            //    //Log($"Gas price is {gasPrice.Value} wei");
            //    var voteOptins = new string[] { "A", "B" };
              
            //    //var gasDeploy = await web3.Eth.DeployContract.EstimateGasAsync(ABI,bytecode, address,new string[][] { voteOptins}).ConfigureAwait(false);

            //    //  Log($"Deploying contract with multiplier {multiplier} using {gasDeploy.Value} gas");
            //    //  var receipt = await web3.Eth.DeployContract.SendRequestAndWaitForReceiptAsync( bytecode, address, gasDeploy, new object[] { voteOptins }).ConfigureAwait(false);

            //    var receipt = await web3.Eth.DeployContract.SendRequestAndWaitForReceiptAsync(ABI,bytecode, address, new HexBigInteger(900000), null, null, new object[] { new string[] { "adsf", "asdf", "asdfa" }  }).ConfigureAwait(false);


            //   // web3.Eth.DeployContract.SendRequestAndWaitForReceiptAsync( TConstructorParams)

            //    var amt = await web3.Eth.GetCode.SendRequestAsync(receipt.ContractAddress).ConfigureAwait(false);

            //// Log($"-> Done at block {receipt.BlockNumber.Value} using {receipt.CumulativeGasUsed.Value} gas");
            ////  Log($"-> Contract address is {receipt.ContractAddress}");
            ////

            //    //// Web3 web3 = new Web3(strURL);

            //    //var web3 = new Nethereum.Web3.Web3(strURL);
            //    //Contract voteContract = web3.Eth.GetContract(ABI, address);
            //    ////voteContract.GetFunction("");

            //    //// Task<BigInteger> candidate1Function = voteContract.GetFunction("candidate1").CallAsync<BigInteger>();
            //    ////candidate1Function.Wait();
            //    ////Task<string> candidate1Function = voteContract.GetFunction("getOptions").CallAsync<string>();
            //    ////candidate1Function.Wait();

            //    //var contract = web3.Eth.GetContract(ABI, address);
            //    //var fucntion = contract.GetFunction("getOptions");
            //    //var result = await fucntion.CallAsync<List<string>>();

            }
        }

        protected async void Button1_Click(object sender, EventArgs e)
        {

            //var web3 = new Nethereum.Web3.Web3(strURL);
            //Contract voteContract = web3.Eth.GetContract(ABI, address);
            //var contract = web3.Eth.GetContract(ABI, address);
            //var fucntion = contract.GetFunction("getOptions");
            //var result = await fucntion.CallAsync<List<string>>();

            
            //rblVoteOptions.DataSource = result;
            //rblVoteOptions.DataBind();
        }

        protected async  void btnCast_Click(object sender, EventArgs e)
        {
            string pkey = string.Empty;
            switch(ddlUser.SelectedItem.Value)
            {
                case "0x71d54D727F333e73Dc15F0abaF4C738C7f2b7C89":
                    pkey = "0xc9f253cd0c04db9ed50ff10aa7f44c03f4b5cf4ef1797a09ec152870245c8454";
                    break;

                case "0xEe5468Aefb6ce3C6b9f207b675B9e0a69Ce3D285":
                    pkey = "0xa938035abec3f3663f929866bb9e73a4931d2df1224611ee738ca1eee4206363";
                    break;
                case "0xAa7d85bc5f5cA97F70Dd26D5AFB37ad52Bbb9FD2":
                    pkey = "0x086c1e39a60e474cc7ec83180d5d06be3c715157a32ffd4fe48432025e8d0698";
                    break;
                case "0xd3A853492D93d476f1C8f22939De47B761B0bFa6":
                    pkey = "0xd2b8613ede4c3e60bd3d66322990391ad99db54ce14b0f1e00908a782e7fae92";
                    break;
                case "0x186aADa08e645d20860D902158BD789c4f8f2548":
                    pkey = "0xee9670eae3cbc5ce430e24dc5cb0a3a5f3f3c0482b7aa85cf4a64711012173f8";
                    break;
                case "0xDc25245A65cCE2aA04b2c3D35078370096045B50":
                    pkey = "0x93c726a37c6ea0294401559ea3290ed8ff3e57a2b92f84a95eaaba9f6c0dc6d0";
                    break;
                case "0x6C192DDFE459e02ED43bf289D301AB227EA82DbF":
                    pkey = "0x4d430210094adadd3f7ddc3496054f7a634aab91326796d9048e4df8c1ec7902";
                    break;
                case "0x8BE3477B937984cc58E1122db926e9f13159f237":
                    pkey = "0xffa8b176898f88cebd8226db713de31f8c1d95d588fb1ab1d5f744bb9f700b6f";
                    break;
                case "0xF7C3Aa8c062E7a536d8Cb94Aa7FA511319617361":
                    pkey = "0x031be7f3a1eebb9f69e8dd02460ec1aa11b49afab0ab1166dfe437b0546ebbac";
                    break;
                case "0x42b7976Db1920f21ce495bFFf5114ff687B6d24F":
                    pkey = "0x1a2f7758fb5419b6479ce92e276459b9736789fd7f1a5e362352ffcc7dd4d8ec";
                    break;
            }
            


            var web3 = new Nethereum.Web3.Web3(new Account(pkey), strURL);
         //   var web3 = new Nethereum.Web3.Web3(new Account("0xd2b8613ede4c3e60bd3d66322990391ad99db54ce14b0f1e00908a782e7fae92"), strURL);
            string address = ddlVotesAvailable.SelectedItem.Value;
           // Contract voteContract = web3.Eth.GetContract(ABI, address);
            var contract = web3.Eth.GetContract(ABI, address);
            var fucntion = contract.GetFunction("vote");
            int selectedOptionValue = rblVoteOptions.Items.IndexOf(rblVoteOptions.Items.FindByText(rblVoteOptions.SelectedItem.Value));
            try
            {
                var gas7 = await fucntion.EstimateGasAsync(ddlUser.SelectedItem.Value, null, null, selectedOptionValue).ConfigureAwait(false); ;
                var receipt7 = await fucntion.SendTransactionAndWaitForReceiptAsync(ddlUser.SelectedItem.Value, gas7, new HexBigInteger(0), null, selectedOptionValue).ConfigureAwait(false);
                DisplayInInfo($"BlockNumber - <b>{Convert.ToString( receipt7.BlockHash)}</b>,GasUsed - <b>{ Convert.ToString( receipt7.GasUsed.Value)}</b>", false);

            }
            catch (Exception ex)
            {
                DisplayInInfo($"{ddlUser.SelectedItem.Text} <strong>{ex.Message}</strong>", true);
            }
           
            //var result =  fucntion.SendTransactionAndWaitForReceiptAsync(new Nethereum.RPC.Eth.DTOs.TransactionInput(){ Data // .CallAsync<string>();
        }

        protected void ddlUser_SelectedIndexChanged(object sender, EventArgs e)
        {
            string strMsg;
            bool isError = false;
            if (ddlUser.SelectedItem.Value != "0")
            {
                strMsg = $" User <strong>{ddlUser.SelectedItem.Text} - {ddlUser.SelectedItem.Value}</strong> will cast Vote.";
                isError = false;
            }
            else
            {
                strMsg = "Please select Proper user to cast vote";
                isError = true;
            }

            DisplayInInfo(strMsg,isError);
        }

        private void DisplayInInfo(string strMSG,bool isError)
        {
            if (isError)
            {
                divError.Visible = true;
                btnCleanError.Visible = true;
                divError.InnerHtml = $"{strMSG}<br>" + divError.InnerHtml;
            }
            else
            {
                divInfor.Visible = true;
                btnCleanInfo.Visible = true;
                divInfor.InnerHtml = $"{strMSG}<br>"+divInfor.InnerHtml;
            }
        }

        protected void ddlVotesAvailable_SelectedIndexChanged(object sender, EventArgs e)
        {
            string selectedVote;
            bool isError;
            btnCast.Visible = false;
            rblVoteOptions.Items.Clear();
            btnViewResult.Visible = false;
            divResult.Visible = false;
            if (ddlVotesAvailable.SelectedItem.Value == "1")
            {
                selectedVote = $"Sorry The vote duration is over, you cant select {ddlVotesAvailable.SelectedItem.Text} now";
                isError = true;
            }
            else if (ddlVotesAvailable.SelectedItem.Value == "0")
            {
                selectedVote = "Please select proper vote";
                isError = true;
            }
            else {
                selectedVote = $"<strong>{ddlVotesAvailable.SelectedItem.Text} - {ddlVotesAvailable.SelectedItem.Value}</strong> is selected";
                isError = false;
                BindvoteOptions(ddlVotesAvailable.SelectedItem.Value);
            }
            DisplayInInfo(selectedVote, isError);

        }

        private async void BindvoteOptions(string value)
        {
            btnViewResult.Visible = true;
            List<string>lstOptions = new List<string>() { };



            if(value== "0x34E7Cff39Edd8Fd069ee65b8470719BE1Dd799B9")
            {
                lstOptions = new List<string>() { "Tea", "Coffee", "Milk" };
            }
            else if (value=="")
            {
                lstOptions = new List<string>() { "Modi", "Rahul", "Other" };
            }
            else if(value== "0x94A662D0de2d8B9723DBDED2d57C41be63ea6db2")
            {
                lstOptions = new List<string>() { "Amitabh", "Jackey", "Sunil" };
            }
            else
            {
                var web3 = new Nethereum.Web3.Web3(new Account("0xc9f253cd0c04db9ed50ff10aa7f44c03f4b5cf4ef1797a09ec152870245c8454"), strURL);
                //var web3 = new Nethereum.Web3.Web3(strURL);
                // Contract voteContract = web3.Eth.GetContract(ABI, address);
                var contract = web3.Eth.GetContract(ABI, value);
                var fucntion = contract.GetFunction("getOptions");
                var result = await fucntion.CallAsync<List<string>>();


                //var contract1 = web3.Eth.GetContract(ABI, "0x1e687609D7dA49FCf6475F1F29f0e6a549fBdF49");
                //var fucntion1 = contract1.GetFunction("getOptions");
                //var result1 = await fucntion1.CallAsync<List<string>>();

                rblVoteOptions.DataSource = result;
                rblVoteOptions.DataBind();
            }

            if (lstOptions.Count > 0)
            {
                rblVoteOptions.DataSource = lstOptions;
                rblVoteOptions.DataBind();
            }
                btnCast.Visible = true;
        }

        protected void btnCleanInfo_Click(object sender, EventArgs e)
        {
            divInfor.InnerHtml = "";
            btnCleanInfo.Visible = false;
        }

        protected void btnCleanError_Click(object sender, EventArgs e)
        {
            divError.InnerHtml = "";
            btnCleanError.Visible = false;
        }

        protected async void btnViewResult_Click(object sender, EventArgs e)
        {
            divResult.InnerHtml = "";
            Random rnd = new Random();
            divResult.Visible = true;
            var web3 = new Nethereum.Web3.Web3(new Account("0xc9f253cd0c04db9ed50ff10aa7f44c03f4b5cf4ef1797a09ec152870245c8454"), strURL);
            //var web3 = new Nethereum.Web3.Web3(strURL);
            // Contract voteContract = web3.Eth.GetContract(ABI, address);
            var contract = web3.Eth.GetContract(ABI, ddlVotesAvailable.SelectedItem.Value);
            var fucntion = contract.GetFunction("getVotes");
            var result = await fucntion.CallAsync<List<UInt16>>();
            List<Data> mylist = new List<Data>();
            for (int i=0;i<=rblVoteOptions.Items.Count-1;i++)
            {
                mylist.Add(new Data(result[i],rblVoteOptions.Items[i].Text));
                divResult.InnerHtml += $"{rblVoteOptions.Items[i].Text} - {result[i]}<br>";
            }


             Chart1.DataSource = mylist;
            Chart1.BackColor = Color.Transparent;
            Chart1.Width = Unit.Pixel(450);
            Chart1.Height = Unit.Pixel(400);
            System.Web.UI.DataVisualization.Charting.Series sr1 = Chart1.Series[0];
            sr1.XValueMember = "StringData";
            sr1.YValueMembers = "IntegerData";
            sr1.Font = new Font("Verdana", 8.25f, FontStyle.Regular);
          //  ChartArea ca1 = new ChartArea("ChartArea1");
            Chart1.ChartAreas["ChartArea1"].AxisX.MajorGrid.Enabled = false;
            Chart1.ChartAreas["ChartArea1"].AxisY.MajorGrid.Enabled = false;
            Chart1.ChartAreas["ChartArea1"].BackColor = Color.Transparent;
           // Chart1.ChartAreas.Add(ca1);


        }

        protected void btnCast_Click1(object sender, EventArgs e)
        {

        }
    }
    public struct Data
    {
        public Data(int intValue, string strValue)
        {
            IntegerData = intValue;
            StringData = strValue;
        }

        public int IntegerData { get; private set; }
        public string StringData { get; private set; }
    }
}